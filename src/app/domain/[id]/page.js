// import { IoShieldCheckmark } from "react-icons/io5";
// import tabs from '../../../data/MobileViewDomain';
// import Image from "next/image";
// export async function generateMetadata({ params }) {
//     return {
//       title: 'Product Page',
//       description: "Generated by create Service Page",
//     }
//   }
// export async function generateStaticParams() {
//     const contenId = tabs.map((tab) => ({ id: tab.id.toString() }));
//     return contenId;
//   }
// const DomainDetailsMobileViewPage = ({params}) => {

//     const contenItem = tabs.find((item) => item.id == params.id);

//     if (!contenItem) {
//       return <div>Content not found</div>;
//     }
//     return (
   
//     <div className="bg-black">
//        <div className="px-2 py-5">
//           <div className="flex justify-center">
//           <Image
//                 src={contenItem.img}
//                 width={100}
//                 height={50}
//                 alt="Picture of the author "
//             />
//           </div>
//            <div className="text-white">
//            <h1 className="text-md font-semibold text-[#F68921]">{contenItem.label}</h1>
//             <p className="break-all text-xs">{contenItem.heading}</p>
//             <div className="flex mt-2 gap-3">
//             <IoShieldCheckmark className="text-[#F68921] -mt-6 text-[72px]"/>
//             <p className="break-all text-sm">{contenItem.title_one}</p>
//             </div>
//             <div className="flex  gap-3 mt-2">
//             <IoShieldCheckmark className="text-[#F68921] -mt-6 text-[72px]"/>
//             <p className="break-all text-sm">{contenItem.title_two}</p>
//             </div>
//            </div>
//         </div>
//     </div>
//     );
// };

// export default DomainDetailsMobileViewPage;




import { IoShieldCheckmark } from "react-icons/io5";
import Image from "next/image";

// URL to fetch the domain data
const tabsURL = 'https://admin.pnhit.pnhbd.com/api/products';

// Function to fetch domain data
const fetchDomainData = async () => {
  try {
    const response = await fetch(tabsURL);
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error("Failed to fetch domain data:", error);
    return [];
  }
};

// Metadata for the page
export async function generateMetadata({ params }) {
  return {
    title: `Product Page - ${params.id}`,
    description: "Generated by create Service Page",
  };
}

// Generate static params for dynamic routes
export async function generateStaticParams() {
  const tabs = await fetchDomainData();  // Fetch the tabs data here

  if (tabs.length === 0) {
    throw new Error("No domain data available to generate static params.");
  }

  // Generate static params for all items
  const contenId = tabs.map((tab) => ({ id: tab.id.toString() }));

  return contenId;
}

// Main page component
const DomainDetailsMobileViewPage = async ({ params }) => {
  const tabs = await fetchDomainData();  // Fetch the tabs data here
  const contenItem = tabs.find((item) => item.id == params.id);

  if (!contenItem) {
    return <div>Content not found</div>;
  }

  return (
    <div className="bg-black">
      <div className="px-2 py-5">
        <div className="flex justify-center">
          <Image
            src={contenItem.image}
            width={100}
            height={50}
            alt="Product Image"
          />
        </div>
        <div className="text-white">
          <h1 className="text-md font-semibold text-[#F68921]">
            {contenItem.title}
          </h1>
          <p className="break-all text-xs" dangerouslySetInnerHTML={{ __html: contenItem.desp }} />
        </div>
      </div>
    </div>
  );
};

export default DomainDetailsMobileViewPage;
